>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2
>>> result = matrix_divided(matrix, div)
>>> print(result)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> div = 1.5
>>> result = matrix_divided(matrix, div)
>>> print(result)
[[1.0, 1.67, 2.33], [3.0, 3.67, 4.33]]

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 0
>>> print(matrix_divided(matrix, div))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = "abc"
>>> print(matrix_divided(matrix, div))
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5], [7, 8, 9]]
>>> div = 2
>>> print(matrix_divided(matrix, div))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, "abc"]]
>>> div = 2
>>> print(matrix_divided(matrix, div))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = float(inf)
>>> print(matrix_divided(matrix, div))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
  File "./2-matrix_divided.py", line 92, in <module>
    print(matrix_divided(matrix))
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided())
Traceback (most recent call last):
  File "./2-matrix_divided.py", line 96, in <module>
    print(matrix_divided())
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
